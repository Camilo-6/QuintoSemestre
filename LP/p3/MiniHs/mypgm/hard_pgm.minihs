let fact = 
    lam x :: Nat -> 
        if x == 0
        then 1
        else x * (fact x-1) in 
let x =  if (3 > 2 || 3 == 2) && 3 >= 2 then 3 else (fact (50000)) in
let identity = let x = x in 
                  lam x :: Nat -> x
                end in
let y = (identity x) in
let fun =
    lam x :: (Bool -> Bool) ->
        if ( x True ) && not ( y > 5 )
        then lam y :: Bool -> lam z :: Nat -> ( fact z )
        else lam y :: Bool -> lam z :: Nat -> ( identity z ) in
(((fun (lam x :: Bool -> False)) True) 5)
end
end
end
end
end